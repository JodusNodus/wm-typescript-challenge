{"version":3,"file":"static/js/392.994ce807.chunk.js","mappings":"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","sources":["api/index.ts","components/card/index.tsx","types/Ingredient.ts","pages/recipes/index.tsx","utils/navigation.ts"],"sourcesContent":["import { Recipe } from \"types\";\n\nasync function getApi<T>(\n  path: string,\n  params?: Record<string, string>\n): Promise<T> {\n  const urlSearchParams = new URLSearchParams(params);\n  const url = params ? `${path}?${urlSearchParams.toString()}` : path;\n  const resp = await fetch(url);\n  if (!resp.ok) {\n    throw new Error(`${resp.status}: ${resp.statusText}`);\n  }\n  return resp.json();\n}\n\nexport type GetPopularRecipesResponse = { cocktails: Recipe[] };\nexport const getPopularRecipes = () =>\n  getApi<GetPopularRecipesResponse>(\"/api/recipes/popular\");\n\nexport type GetAllRecipesResponse = {\n  total: number;\n  limit: number;\n  offset: number;\n  data: Recipe[];\n};\nexport const getAllRecipes = (limit: number, offset: number) =>\n  getApi<GetAllRecipesResponse>(\"/api/recipes/all\", {\n    limit: limit.toString(),\n    offset: offset.toString(),\n  });\n","import { Recipe, isSpecialIngredient } from \"types\";\n\ntype Props = {\n  recipe: Recipe;\n};\nexport const Card = ({ recipe }: Props) => {\n  return (\n    <div className=\"flex rounded border border-gray-200 bg-white/50 p-4 dark:border-gray-500 dark:bg-gray-800 dark:text-gray-300\">\n      <div className=\"block space-y-2\">\n        <h2 className=\"text-2xl font-bold dark:text-white\">{recipe.name}</h2>\n        {recipe.category ? (\n          <span className=\"mr-1 inline-block rounded bg-pink-200 px-2 py-1 text-xs font-semibold uppercase text-pink-800 last:mr-0\">\n            {recipe.category}\n          </span>\n        ) : undefined}\n\n        <h3 className=\"text-lg font-bold\">Ingredients</h3>\n        <ul className=\"list-inside list-disc px-1 text-sm\">\n          {recipe.ingredients.map((ingredient) => {\n            if (isSpecialIngredient(ingredient)) {\n              return <li key={ingredient.special}>{ingredient.special}</li>;\n            }\n            return (\n              <li key={ingredient.ingredient}>\n                {ingredient.amount} {ingredient.unit} {ingredient.ingredient}\n              </li>\n            );\n          })}\n        </ul>\n\n        <h3 className=\"text-lg font-bold\">Preparation</h3>\n        <div className=\"text-sm\">{recipe.preparation}</div>\n      </div>\n    </div>\n  );\n};\n","export type NormalIngredient = {\n  unit: string;\n  amount: number;\n  ingredient: string;\n};\n\nexport type SpecialIngredient = {\n  special: string;\n};\n\nexport type Ingredient = NormalIngredient | SpecialIngredient;\n\nexport const isSpecialIngredient = (\n  ingredient: Ingredient\n): ingredient is SpecialIngredient => \"special\" in ingredient;\n","import { GetAllRecipesResponse, getAllRecipes } from \"api\";\nimport { Spinner } from \"components\";\nimport { Card } from \"components/card\";\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { ROUTES } from \"router\";\nimport useScrollToTopOnPageChange from \"utils/navigation\";\n\nconst CARDS_PER_PAGE = 8;\n\nconst Recipes = () => {\n  const { page: pageStr = \"1\" } = useParams();\n  const page = React.useMemo(() => {\n    const int = parseInt(pageStr, 10);\n    if (isNaN(int)) return 1;\n    return int;\n  }, [pageStr]);\n\n  const { error, data, isLoading } = useQuery<GetAllRecipesResponse, Error>(\n    [\"allRecipes\", page],\n    () => getAllRecipes(CARDS_PER_PAGE, (page - 1) * CARDS_PER_PAGE)\n  );\n  useScrollToTopOnPageChange();\n\n  return (\n    <main>\n      <h1 className=\"mb-5 text-3xl font-semibold dark:text-white\">\n        All cocktails.\n      </h1>\n      {isLoading && (\n        <div className=\"flex items-center justify-center\">\n          <Spinner />\n        </div>\n      )}\n      {error && (\n        <div>\n          <h2>Error: {error.toString()}</h2>\n        </div>\n      )}\n      {data && (\n        <>\n          <div className=\"grid grid-flow-row auto-rows-max grid-cols-1 gap-2 md:grid-cols-3 lg:grid-cols-4\">\n            {data.data.map((recipe) => (\n              <Card key={recipe.name} recipe={recipe} />\n            ))}\n          </div>\n          <PageControls\n            page={page}\n            total={Math.ceil(data.total / CARDS_PER_PAGE)}\n          />\n        </>\n      )}\n    </main>\n  );\n};\n\nconst controlStyles =\n  \"px-2 text-gray-700 hover:text-black dark:text-gray-300 dark:hover:text-white\";\n\nconst PageControls = ({ page, total }: { page: number; total: number }) => {\n  const pages = React.useMemo(() => new Array(total).fill(0), [total]);\n  const hidePrev = page <= 1;\n  const hideNext = page >= total;\n  return (\n    <div className=\"relative mt-5 flex flex-col items-center\">\n      <div className=\"flex w-full justify-between\">\n        <Link\n          className={`${controlStyles} ${hidePrev ? \"invisible\" : \"\"}`}\n          aria-disabled={hidePrev}\n          to={`${ROUTES.RECIPES}/${page - 1}`}\n        >\n          &larr; Previous\n        </Link>\n        <Link\n          aria-disabled={hideNext}\n          className={`${controlStyles} ${hideNext ? \"invisible\" : \"\"}`}\n          to={`${ROUTES.RECIPES}/${page + 1}`}\n        >\n          Next &rarr;\n        </Link>\n      </div>\n      <ol className=\"mt-3 flex sm:absolute sm:top-0 sm:mt-0\">\n        {pages.map((x, i) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <li key={i}>\n            <Link\n              className={`${controlStyles} ${\n                i === page - 1 ? \"font-semibold underline\" : \"\"\n              }`}\n              to={`${ROUTES.RECIPES}/${i + 1}`}\n            >\n              {i + 1}\n            </Link>\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default Recipes;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function useScrollToTopOnPageChange() {\n  const { key } = useLocation();\n  React.useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [key]);\n}\n"],"names":["async","getApi","path","params","urlSearchParams","URLSearchParams","url","toString","resp","fetch","ok","Error","status","statusText","json","getPopularRecipes","getAllRecipes","limit","offset","Card","recipe","className","name","category","undefined","ingredients","map","ingredient","isSpecialIngredient","special","amount","unit","preparation","controlStyles","PageControls","page","total","pages","React","Array","fill","hidePrev","hideNext","to","ROUTES","x","i","pageStr","useParams","int","parseInt","isNaN","error","data","isLoading","useQuery","key","useLocation","window","scrollTo","useScrollToTopOnPageChange","Math","ceil"],"sourceRoot":""}